# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: build artifacts
      run: make build-release-artifacts

    - name: version
      run: git show --format='%H' --no-patch
      id: version

    - name: create_release
      uses: softprops/action-gh-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        tag_name: ${{ steps.version.outputs.version.text }}
        body_path: ""
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: upload linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./csv2sqlite.linux_amd64.zip
        asset_name: csv2sqlite.linux_amd64.zip
        asset_content_type: application/zip

    - name: upload darwin artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./csv2sqlite.darwind_arm64.zip
        asset_name: csv2sqlite.darwind_arm64.zip
        asset_content_type: application/zip

    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./csv2sqlite.windows_amd64.zip
        asset_name: csv2sqlite.windows_amd64.zip
        asset_content_type: application/zip

